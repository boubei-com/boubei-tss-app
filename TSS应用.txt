一、基于TSS开发应用（拷贝TSS至待开发应用）
	1、拷贝TSSApp项目至和boubei-tss目录平级
	2、执行syncTssAll.sh
	3、修改pom.xml，选择基于TSS的Dependence；并把所有tssapp字样替换成tss
	4、删除资源注册文件 resources/resource-config.xml
	   删除package: com.boubei.tss.demo.resource下
	5、修改application.properties里的 application.code值为TSS，及更改连接的MySQL数据库名；
	   去除#online user manager的注释；
	6、放开META-INF/persistence.xml里对orm-tss.xml等的注释， 去掉orm.xml里对RoleUserMapping的配置
	7、去掉tss/appServers.xml里的tssapp配置
	8、导入一个TSS的初始化数据库 (或使用 boubei-tss的InitDatabase.java来完成初始化)
	9、TxTestSupport.java里注释掉："classpath:META-INF/remote/um-remote.xml"
	   放开："classpath:META-INF/spring-um.xml"
	10、执行 mvn eclipse:eclipse，导入到eclipse
	11、尝试跑Test 及 mvn jetty:run, 访问登陆 http://localhost:9000/tss, 一切正常则OK

二、围绕TSS开发应用（独立应用，向TSS注册应用资源信息）
	1、拷贝TSSApp项目至和boubei-tss目录平级
	2、执行syncTssClient.sh； 并修改tssUtils.js里的appCode为目标Code（xxx）
	3、修改pom.xml，选择围绕TSS的Dependence；
	4、完善资源注册文件 resources/resource-config.xml
	5、修改application.properties里的 application.code值为目标Code（xxx）；
	   去除#online user manager的注释；
	6、修改tss/appServers.xml里的tssDemo配置为目标Code（xxx）
	7、初始化数据库，执行test里的 InitDatabase.java
	8、执行 mvn eclipse:eclipse，导入到eclipse
	9、尝试跑Test 及 mvn jetty:run, 访问登陆 http://localhost:9000/xxx, 一切正常则OK